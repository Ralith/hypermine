name: CI

on:
  push:
    branches: ['master']
  pull_request:

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    env:
      VULKAN_VERSION: "1.3.290.0"
      VULKAN_SDK: "C:/VulkanSDK/1.3.290.0"

    steps:
      - name: Install shaderc
        if: matrix.os == 'ubuntu-latest'
        run: |
          wget -nv -r -nd -A install.tgz 'https://storage.googleapis.com/shaderc/badges/build_link_linux_clang_release.html'
          tar xf install.tgz
          echo "SHADERC_LIB_DIR=$PWD/install/lib" >> "$GITHUB_ENV"
      - name: Install Vulkan SDK
        if: matrix.os == 'windows-latest'
        run: |
          Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/${{ env.VULKAN_VERSION }}/windows/VulkanSDK-${{ env.VULKAN_VERSION }}-Installer.exe" -OutFile vulkan.exe
          ./vulkan.exe --accept-licenses --default-answer --confirm-command install

      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo build --workspace --all-targets
      - run: cargo test --workspace

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - run: cargo fmt --all -- --check
      - if: always()
        run: cargo clippy --workspace --all-targets -- -D warnings

  check-protos:
    name: Check protos
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: sudo apt update && sudo apt-get -y install protobuf-compiler
      - name: Generate Rust code from .proto files
        run: cargo run -p gen-protos
      - name: Check for uncommitted changes
        run: git diff --exit-code
