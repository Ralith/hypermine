#version 450

#include "common.h"

layout(set = 1, binding = 1) restrict buffer FaceCounts {
    uint face_counts[];
};
layout(push_constant) uniform Uniforms {
    uint stage;
};

// We divide the array up into blocks of size 2^(stage + 1). One thread is allocated to each slot in
// the second half of each block, and each thread adds the final element in the first half of its
// block to its slot.
// 01 23 45 67
// 0123 4567
void main() {
    const uint invocation = invocation_index();
    const int n = 1 << stage;
    const uint start = 2 * (invocation & -n) + n;
    // 0, 2, 4, 6;  1, 1, 5, 5;  3, 3, 3, 3
    const uint read_index = start - 1;
    // 1, 3, 5, 7;  2, 3, 6, 7;  4, 5, 6, 7;
    const uint write_index = start + (invocation & (n - 1));
    face_counts[write_index] += face_counts[read_index];
}
